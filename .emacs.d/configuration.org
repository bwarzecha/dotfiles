* Basic Settings 

#+BEGIN_SRC emacs-lisp

  (require 'use-package-ensure)
  (setq use-package-always-ensure t)

  (use-package auto-compile
    :config (auto-compile-on-load-mode))

  (setq load-prefer-newer t)

  (setq user-full-name "Bartosz Warzecha"
	user-mail-address "bartosz@warzecha.co.uk"
	calendar-latitude 55.86
	calendar-longitude -4.25
	calendar-location-name "Glasgow, UK")

  (use-package spacemacs-theme
	:defer t
	:init
	(load-theme 'spacemacs-dark t))
(use-package org-bullets
  :init
  (add-hook 'org-mode-hook 'org-bullets-mode))
#+END_SRC

* Evil Mode

#+BEGIN_SRC emacs-lisp

;; load evil
(use-package evil
  :init ;; tweak evil's configuration before loading it
  (setq evil-search-module 'evil-search)
  (setq evil-ex-complete-emacs-commands nil)
  (setq evil-vsplit-window-right t)
  (setq evil-split-window-below t)
  (setq evil-shift-round nil)
  (setq evil-want-C-u-scroll t)
  :config ;; tweak evil after loading it
  (evil-mode)

  ;; example how to map a command in normal mode (called 'normal state' in evil)
  (define-key evil-normal-state-map (kbd ", w") 'evil-window-vsplit))


#+END_SRC
* Erlang
#+BEGIN_SRC emacs-lisp
(use-package exec-path-from-shell
:config
(when (memq window-system '(mac ns x))
  (exec-path-from-shell-initialize))
)



(use-package erlang
  :init
  (add-to-list 'auto-mode-alist '("\\.P\\'" . erlang-mode))
  (add-to-list 'auto-mode-alist '("\\.E\\'" . erlang-mode))
  (add-to-list 'auto-mode-alist '("\\.S\\'" . erlang-mode))
  :config
  (add-hook 'erlang-mode-hook
            (lambda ()
              (setq mode-name "erl"
                    erlang-compile-extra-opts '((i . "../include"))
                    erlang-root-dir "/usr/local/opt/erlang/"))))
(use-package edts
  :init
  (setq edts-inhibit-package-check t
        edts-man-root "~/.emacs.d/edts/doc/21.3.7"))

(use-package flycheck
  :diminish flycheck-mode
  :config
  (add-hook 'after-init-hook 'global-flycheck-mode)
  (setq flycheck-display-errors-function nil
        flycheck-erlang-include-path '("../include")
        flycheck-erlang-library-path '()
        flycheck-check-syntax-automatically '(save)))
#+END_SRC
* Python
#+BEGIN_SRC emacs-lisp
(use-package elpy
  :init
  (elpy-enable)
) 
#+END_SRC
